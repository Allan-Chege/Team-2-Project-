# -*- coding: utf-8 -*-
"""Team 2_2021_02_Final_Project_Python_notebook

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rejq8I2EVQJqUC33atxl0hnsdcCaQdHz

#**TEAM 2 FINAL PROJECT**
"""

#import the libraries necessary for analysis 
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""##**Data Preparation** """

# Upload the datasets to be analyzed in csv form 
# First clean the Portugese Student dataset of duplicates and null values 
# Then format the data for use in analysis

#Importing portugese student dataset 
portugal = pd.read_csv("student-por.csv")
portugal.head(10)

# Looking for missing values within the dataset 
portugal.isnull().any()

#Add new column 'objecting' with a counter  
lista = []
for i in range(649):
  lista.append(i)
portugal["objecting"] = lista
portugal.head(10)

# dropping duplicate rows
portugal = portugal.drop_duplicates()
portugal.shape

# look at datatypes
portugal.dtypes

# check accuracy
x = portugal["G1"].max()
print(x)
y = portugal["G2"].max()
print(y)
z = portugal["G3"].max()
print(z)

# merge Grade columns
x = portugal["G1"] + portugal["G2"] + portugal["G3"]
portugal["Grade"] = x / 3
portugal["Grade"] = portugal["Grade"].round(2)
portugal.head()

#  drop columns
portugal.drop(["G1", "G2", "G3", "Mjob", "Fjob", "nursery"], axis=1, inplace= True)
portugal.head(10)

# uniformity of columns
portugal.columns = portugal.columns.str.lower()
portugal.head()

# renaming columns
portugal.columns = ["school", "sex", "age", "address", "fam_size", "p_status", "m_edu", "f_edu", "reason", "guardian", "travel_time", "study_time", "failures", "school_sup", "fam_sup", "paid", "activities", "higher", "internet", "romantic", "fam_rel", "free_time", "go_out", "dalc", "walc", "health", "absences", "objecting", "grade"]
portugal.head()

#convert the dataset to 'CR7' for future operations 
portugal.to_csv("cr7.csv")

#View information on the just renamed dataset
cr7 = pd.read_csv('cr7.csv')
cr7.info()

"""##***Data Analysis***"""

# We investigate the data to find corelations between alcohol consumption and various variables assigned to the students 
# eg school, parental care, address which will help us find the factors corelating with high consumption rates in students
# and potential effects on performance eg if students who consume alcohol don't attend school

"""###*SCHOOL vs ALCOHOL CONSUMPTION*"""

#How does the school attended affect alcohol consumption rates
#Get overall description of the data in the school column
# 
cr7.school.describe().T

# visualize number of students in each school
sns.catplot(x="school", kind="count",palette="magma", data=cr7, height = 6)
plt.title("'GP' - Gabriel Pereira or 'MS' - Mousinho da")

#plot graphs for both weekday and weekend drinking depending on school the students attend 
plt.figure(figsize=(10,5))
plt.title("Box plot for weekday alcohol,depending on the school")
sns.boxplot(y="school", x="dalc", data = cr7 , orient="h", palette = 'rainbow')

plt.figure(figsize=(10,5))
plt.title("Box plot for weekend alcohol,depending on the school")
sns.boxplot(y="school", x="walc", data = cr7 , orient="h", palette = 'rainbow')

"""###*GENDER vs ALCOHOL CONSUMPTION*"""

#How do the students' genders affect alcohol consumption rates
#Get overall description of the data in the sex column
#
cr7.sex.describe().T

#visualize the number of girls vs boys in the schools 
sns.catplot(x="sex", kind="count",palette="magma", data=cr7, height = 6)
plt.title("Gender of students : F - female,M - male")
#The number of girls is a little more

#plot graphs for both weekday and weekend drinking depending on sex of the students
plt.figure(figsize=(10,5))
plt.title("Box plot for weekday alcohol,depending on the sex")
sns.boxplot(y="sex", x="dalc", data = cr7 , orient="h", palette = 'rainbow')
#males seem to do the more weekday drinking

plt.figure(figsize=(10,5))
plt.title("Box plot for weekend alcohol,depending on the sex")
sns.boxplot(y="sex", x="walc", data = cr7 , orient="h", palette = 'rainbow')
#more females drink over the weekend than during the week but still relatively more males do it

"""###*AGE vs ALCOHOL CONSUMPTION*"""

##How do student ages affect alcohol consumption rates
#Get overall description of the data in the age column
#
cr7.age.describe().T

#plot graphs of the ages of students in the school
sns.catplot(x="age", kind="count",palette="magma", data=cr7, height = 6)
plt.title("Age of students : 17 16 18 15 19 20 21 22 " )
#basically we are dealing with students 17-19 years

#plot graphs for both weekday and weekend drinking depending on age of the students
plt.figure(figsize=(10,5))
plt.title("Box plot for weekday alcohol,depending on the age")
sns.boxplot(y="age", x="dalc", data = cr7 , orient="h", palette = 'rainbow')
#older students, 19 - 21, seem to drink more over the week

plt.figure(figsize=(10,5))
plt.title("Box plot for weekend alcohol,depending on the age")
sns.boxplot(y="age", x="walc", data = cr7 , orient="h", palette = 'rainbow')
#there's more younger people drinking over the weekend and much fewer 21 year olds

"""###*ADDRESS vs ALCOHOL CONSUMPTION*"""

# Does the student's home address affect alcohol consumption rates
# Get overall description of the data in the address column
#
cr7.address.describe().T

#plot graphs of the addresses of students in the school
sns.catplot(x="address", kind="count",palette="magma", data=cr7, height = 6)
plt.title("Address of students : U - Urban,R - Rural" )
#Most students are from urban areas

#plot graphs for both weekday and weekend drinking depending on address where the students live
plt.figure(figsize=(10,5))
plt.title("Box plot for weekday alcohol,depending on the address")
sns.boxplot(y="address", x="dalc", data = cr7 , orient="h", palette = 'rainbow')
#There's a similar average drinking for both urban and rural dwellers during the week

plt.figure(figsize=(10,5))
plt.title("Box plot for weekend alcohol,depending on the address")
sns.boxplot(y="address", x="walc", data = cr7 , orient="h", palette = 'rainbow')
#There's a similar average drinking for both urban and rural dwellers during the weekend, but both higher
#than over the week

"""###*TRAVEL TIME vs ALCOHOL CONSUMPTION*"""

#How does the time it takes to get to school affect alcohol consumption rates 
#Plot figures for time it takes to get to school, as travel time, based on student address (urban vs rural)
# Also display the time that students spend on the way to school ( 1 - very close, 4 - very far).
#
sns.catplot(x="address", kind="count",hue = "travel_time",palette="brg", data=cr7, height = 6)
plt.title("Students address: U - urban, R - rural")

# Most of the students live in the city. Takes them shorter time to get to school 
# students living in the rural areas probably take more time eto get to school because of transport issues

#plot graphs for both weekday and weekend drinking depending on address where the students live(U vs R) and the time it takes
#to get to school (travel time)
#
plt.figure(figsize=(10,5))
plt.title("Box plot for weekday alcohol,depending on the address with the travel time")
sns.boxplot(y="address", x="dalc",hue='travel_time' , data = cr7 , orient="h", palette = 'rainbow')

plt.figure(figsize=(10,5))
plt.title("Box plot for weekend alcohol,depending on the address with the travel time")
sns.boxplot(y="address", x="walc",hue='travel_time' , data = cr7 , orient="h", palette = 'rainbow')

"""###*STUDY TIME vs ALCOHOL CONSUMPTION*"""

#How does the time students take to study affect alcohol consumption rates
#Plot figures for the students' study time in hours vs weekend alcohol consumption
# 
sns.countplot(data= cr7, x= 'walc', hue= "study_time")

# Plot figures for the students' study time vs weekday alcohol consumption
# 
sns.countplot(data= cr7, x= 'dalc', hue= "study_time")

"""###*HEAVY DRINKERS vs BINGE DRINKERS*"""

#plot the graph of heavy vs binge drinkers as determined by the number of weekday and weekend hours 
#spent drinking 
#

cr7.loc[(cr7["walc"].isin([4,5]) & cr7["dalc"].isin([1,2])), "binge_drinker"] = 1
cr7.loc[(cr7["walc"].isin([4,5]) & cr7["dalc"].isin([4,5])), "heavy_drinker"] = 1
cr7[["binge_drinker", "heavy_drinker"]] = cr7[["binge_drinker", "heavy_drinker"]].fillna(0)
fig, ax = plt.subplots()
sns.countplot("binge_drinker", hue="heavy_drinker", data=cr7, ax=ax)

l = ax.legend()
l.set_title("")
new_legend_labels = ['light-moderate drinker', 'heavy drinker']
for t, l in zip(l.texts, new_legend_labels): t.set_text(l)

ax.set_xlabel("")
ax.set_xticklabels(['consistent drinking behaviour', 'binge drinking'])
fig.suptitle("Distribution of extreme drinking behaviour");
#this shows we have more light drinkers than binge drinkers

"""###*PARENTAL STATUS vs ALCOHOL CONSUMPTION*"""

#Does a student's parental status, together or apart, affect alcohol consumption rates 
#Get number of students whose parents are apart
#
s = cr7[cr7["p_status"] == 'A']
s["p_status"].shape

# Get number of students whose parents are together
y = cr7[cr7["p_status"] == "T"]
y["p_status"].shape

# count of weekday alcohol consumption of students according to parental status
x = cr7.groupby(["p_status", "dalc"])
y = x["p_status"].count()
y

# count of weekend alcohol consumption of students according to parental status
x = cr7.groupby(["p_status", "walc"])
y = x["p_status"].count()
y

# plot bar graph of count of students weekday alcohol consumption according to parental status
sns.countplot(data= cr7, x= 'dalc', hue= "p_status")

# plot bar graph of count of students weekend alcohol consumption according to parental status
sns.countplot(data= cr7, x= 'walc', hue= "p_status")

"""###*AVERAGE GRADE vs PARENTAL STATUS*"""

# What are the average grades of students in families that are together vs apart  
# average grade of students whose parents are together and apart.
#
ensemble = cr7[cr7["p_status"] == "T"]
together = ensemble["grade"].mean()
print(together)
apartheid = cr7[cr7["p_status"] == "A"]
apart = apartheid["grade"].mean()
print(apart)

# line graph of count of students grades according to parental status
fig, ax = plt.subplots(figsize= (10, 7))
cr7.groupby(["grade", "p_status"]).count()["sex"].unstack().plot(ax = ax)
#parents who had "together" status had children with higher grades on average

"""###*AVERAGE GRADE vs FAMILY SIZE*"""

# Is there a corelation between average grade and family size 
# first find average score of students with a family size greater than 3 and less than 3
great = cr7[cr7["fam_size"] == "GT3"]
greater = great["grade"].mean()
print(greater)
lesser = cr7[cr7["fam_size"] == "LE3"]
less = lesser["grade"].mean()
print(less)

# plot line graph of count of students grades according to family size
fig, ax = plt.subplots(figsize= (10, 7))
cr7.groupby(["grade", "fam_size"]).count()["sex"].unstack().plot(ax = ax)

"""###*FAMILY SIZE vs ALCOHOL CONSUMPTION*"""

#Does family size affect alcohol consumption 
# first find number of students who have a family size greater than 3
#
s = cr7[cr7["fam_size"] == 'GT3']
s["fam_size"].shape

# number of students who have a family less than 3
e = cr7[cr7["fam_size"] == "LE3"]
e["fam_size"].shape

# count of weekday alcohol consumption of students according to family size
x = cr7.groupby(["fam_size", "dalc"])
y = x["fam_size"].count()
y

# bar graph of count of students weekday alcohol consumption according to family size
sns.countplot(data= cr7, x= 'dalc', hue= "fam_size")

# count of weekend alcohol consumption of students according to family size
x = cr7.groupby(["fam_size", "walc"])
y = x["fam_size"].count()
y

# bar graph of count of students weekend alcohol consumption according to family size
sns.countplot(data= cr7, x= 'walc', hue= "fam_size")

"""###*REASON FOR GOING TO SCHOOL vs ALCOHOL CONSUMPTION*"""

#Do the student's reasons for going to school affect their alcohol consumption   
#find the count of individual reasons for students going to the school
#
q = cr7.groupby("reason")
d = q["reason"].count()
d

# count of students weekday alcohol consumption according to reason
m = cr7.groupby(["reason", "dalc"])
n = m["reason"].count()
n

# count of students weekend alcohol consumption according to reason
x = cr7.groupby(["reason", "walc"])
y = x["reason"].count()
y

# bar graph of count of students weekday alcohol consumption according to reason
sns.countplot(data= cr7, x= 'dalc', hue= "reason")

# bar graph of count of students weekend alcohol consumption according to reason
sns.countplot(data= cr7, x= 'walc', hue= "reason")

# line graph of count of students grades according to reason
fig, ax = plt.subplots(figsize= (13, 7))
cr7.groupby(["grade", "reason"]).count()["sex"].unstack().plot(ax = ax)

"""###*GUARDIANS vs ALCOHOL CONSUMPTION*"""

#How does having guardians, and specifically each gender of guardian, affect alcohol consumption among students
# find the count of students' guardians
q = cr7.groupby("guardian")
d = q["guardian"].count()
d

# count of student guardian's in each school
q = cr7.groupby(["school", "guardian"])
d = q["guardian"].count()
d

# count of student weekday alcohol consumption according to guardian
q = cr7.groupby(["guardian", "dalc"])
d = q["guardian"].count()
d

# count of student weekend alcohol consumption according to guardian
b = cr7.groupby(["guardian", "walc"])
a = b["guardian"].count()
a

# average students grades according to grade
mere = cr7[cr7["guardian"] == "mother"]
maman = mere["grade"].mean()
print(maman)
pere = cr7[cr7["guardian"] == "father"]
papa = pere["grade"].mean()
print(papa)
autres = cr7[cr7["guardian"] == "other"]
autre = autres["grade"].mean()
print(autre)

# bar graph of student weekday alcohol consumption according to guardian 
sns.countplot(data= cr7, x= 'dalc', hue= "guardian")

# bar graph of student weekend alcohol consumption according to guardian
sns.countplot(data= cr7, x= 'walc', hue= "guardian")

# line graph of count of students grades according to guardian
fig, ax = plt.subplots(figsize= (10, 7))
cr7.groupby(["grade", "guardian"]).count()["sex"].unstack().plot(ax = ax)

"""###*FAILURES AND ABSENCES DATA vs ALCOHOL CONSUMPTION*"""

#importing our already cleaned data set
df = pd.read_csv('cr7.csv', encoding='Latin1')
df.head(5)

#Column explanation / definition
# failures: number of past class failures (numeric: n if 1<=n<3, else 4)
# absences:	number (of days) of school absences (numeric: from 0 to 93)
print(df['failures'].nlargest(5))
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
print(df['absences'].nlargest(5))

"""####*i. Failures vs Age of alcohol consumers*"""

#Investigation the relationship between past failures and ages that consume alcohol
print(df.groupby(['failures', 'age' ])['age'].count())
print('*****************************************************')
df.groupby(['failures', 'age' ])['age'].count().head(10).plot.bar(x='age', y='failures', rot=0)

"""####*ii. Failures vs Sex of alcohol consumers*"""

#Investigation the relationship between past failures against the sexes that consume alcohol
print(df.groupby(['failures', 'sex' ])['sex'].count())
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
df.groupby(['sex' ])['failures'].count().plot.pie()

"""#### *iii. School absence vs Age of alcohol consumers*"""

#Investigating the relationship between school-day-absences againist ages that consume alcohol
print(df.groupby(['age',])['absences'].count().nlargest())
print("*******************************************************")
df.groupby(['age',])['absences'].count().nlargest(5).plot.bar()

"""####*iv. School absence vs Sex of alcohol consumers*"""

#Investigating the relationship between school-day-absences against sex that consume alcohol
print(df.groupby(['sex',])['absences'].count().nlargest())
df.groupby(['sex',])['absences'].count().nlargest().plot.pie()

"""###*SCHOOL SUPPORT vs ALCOHOL CONSUMPTION*"""

# how extra educational support affects alcoholism on weekends
# plot graph of school support agains weekend drinking
#
cr7_df = cr7[['school_sup', 'fam_sup', 'paid','higher', 'activities', 'internet', 'romantic', 'dalc', 'walc']]
cr7_df
school_1 = cr7_df.groupby(['walc', 'school_sup'])['school_sup'].count()
school_1.plot.bar()
plt.title('Extra school support effect on alcohol consumption weekends')
plt.ylabel('Count', fontsize=12)
school_1

# how extra educational support affects alcoholism on weekdays
#plot graph of school support agains weekday drinking
#
school_2 = cr7_df.groupby(['walc', 'school_sup'])['school_sup'].count()
school_2.plot.bar()
plt.title('Extra school support effect on alcohol consumption weekdayss')
plt.ylabel('Count', fontsize=12)
school_2

"""###*FAMILY SUPPORT vs ALCOHOL CONSUMPTION*"""

# how familial support affects alcohol consumption on weekends
# plot graph of family support against weekend drinking
#
fam_1 = cr7_df.groupby(['walc', 'fam_sup'])['fam_sup'].count()
fam_1.plot.bar()
plt.title('Family support effect on alcohol consumption weekends')
plt.ylabel('Count', fontsize=12)
fam_1

# how familial support affects alcohol consumption on weekdays
# plot graph of family support against weekday drinking
#
fam_2 = cr7_df.groupby(['dalc', 'fam_sup'])['fam_sup'].count()
fam_2.plot.bar()
plt.title('Family support effect on alcohol consumption weekdays')
plt.ylabel('Count', fontsize=12)
fam_2

"""###*INCOME VS ALCOHOL CONSUMPTION*"""

# how extra income affects alcoholism on weekends
# plot graph of 'paid' status against weekend drinking
#
paid_1 = cr7_df.groupby(['walc', 'paid'])['paid'].count()
paid_1.plot.bar()
plt.title('Extra classes effect on alcohol consumption weekends')
plt.ylabel('Count', fontsize=12)
paid_1

# how extra income affects alcohol consumption on weekdays
# plot graph of 'paid' status against weekday drinking
#
paid_2 = cr7_df.groupby(['dalc', 'paid'])['paid'].count()
paid_2.plot.bar()
plt.title('Extra classes effect on alcohol consumption weekdays')
plt.ylabel('Count', fontsize=12)
paid_2

"""### *ACTIVITIES vs ALCOHOL CONSUMPTION*"""

# how having extra curriculars affects alcoholism on weekends
# plot graph of activities against weekend drinking
#
act_1 = cr7_df.groupby(['walc', 'activities'])['activities'].count()
act_1.plot.bar()
plt.title('Extra curriculars effect on alcohol consumption weekends')
plt.ylabel('Count', fontsize=12)
act_1

# how having extra curriculars affects alcoholism on weekdays
# plot graph of activities against weekday drinking
#
act_2 = cr7_df.groupby(['dalc', 'activities'])['activities'].count()
act_2.plot.bar()
plt.title('Extra curriculars effect on alcohol consumption weekdays')
plt.ylabel('Count', fontsize=12)
act_2

"""###*INTERNET ACCESS vs ALCOHOL CONSUMPTION*"""

# effect of having internet access at home on alcohol consumption
# over weekends
#plot graph of internet vs weekend alcohol consumption
#
int_1 = cr7_df.groupby(['walc', 'internet'])['internet'].count()
int_1.plot.bar()
plt.title('internet effect on alcohol consumption weekends')
plt.ylabel('Count', fontsize=12)
int_1

# effect of having internet access at home on alcohol consumption
# over weekdays
#plot graph of internet vs weekday alcohol consumption
#
int_2 = cr7_df.groupby(['dalc', 'internet'])['internet'].count()
int_2.plot.bar()
plt.title('internet effect on alcohol consumption weekdays')
plt.ylabel('Count', fontsize=12)
int_2

"""###*ROMANTIC RELATIONS vs ALCOHOL CONSUMPTION*"""

# The effect of romantic involvement on alcoholism on weekends
# plot graph of 'Romantic' against weekend drinking
#
rom_1 = cr7_df.groupby(['walc', 'romantic'])['romantic'].count()
rom_1.plot.bar()
plt.title('Romantic relations effect on alcohol consumption weekends', fontsize=14)
plt.ylabel('Count', fontsize=12)
rom_1

# The effect of romantic involvement on alcoholism on weekdays
# plot graph of 'Romantic' against weekday drinking
#
rom_2 = cr7_df.groupby(['dalc', 'romantic'])['romantic'].count()
rom_2.plot.bar()
plt.title('Romantic relations effect on alcohol consumption weekdays', fontsize=14)
plt.ylabel('Count', fontsize=12)
rom_2

"""###*HIGHER STATUS vs ALCOHOL CONSUMPTION*"""

# The effect of Higher status on alcohol consumption on weekends
# plot graph of 'Higher' against weekend drinking
#
high_1 = cr7_df.groupby(['walc', 'higher'])['higher'].count()
plt.figure(figsize=(6,5))
high_1.plot.bar()
plt.title('Higher status effect on alcohol consumption weekends', fontsize=14)
plt.ylabel('Count', fontsize=12)
high_1

# The effect of Higher status on alcohol consumption on weekdays
# plot graph of 'Higher' against weekday drinking
#
high_2 = cr7_df.groupby(['dalc', 'higher'])['higher'].count()
plt.figure(figsize=(6,5))
high_2.plot.bar()
plt.title('Higher status effect on alcohol consumption weekdays', fontsize=14)
plt.ylabel('Count', fontsize=12)
high_2

"""###*GOING OUT vs ALCOHOL CONSUMPTION*"""

#getting information on the data in 'go out' column
cr7.go_out.describe()

##plot graph to check frequency of students going out
sns.set_theme(style="darkgrid")
ax = sns.countplot(x="go_out", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Chances of going out")
plt.ylabel("Students")
plt.title("Frequency of student going out");

#plot graph to check relationship between going out and weekday drinking
ax = sns.countplot(x="dalc", hue="go_out", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Alcohol consumption rate")
plt.ylabel("Students")
plt.title("Weekday Alcohol consumption in relation to free time");

#plot graph to check relationship between going out and weekend drinking
ax = sns.countplot(x="walc", hue="go_out", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Alcohol consumption rate")
plt.ylabel("Students")
plt.title("Weekend Alcohol consumption in relation to going out");

"""###*FAMILY RELATIONSHIP STATUS vs ALCOHOL CONSUMPTION*"""

#How do relations within the family of the student affect alcohol consumption 
#plot graph to check average status of family relationships 
#
sns.set_theme(style="darkgrid")
ax = sns.countplot(x="fam_rel", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Family relationship quality")
plt.ylabel("Students")
plt.title("Overview of family relationship")

#checking on the relationship between family relationship and weekday drinking
ax = sns.countplot(x="dalc", hue="fam_rel", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Alcohol consumption rate")
plt.ylabel("Students")
plt.title("Weekday Alcohol consumption in relation to family relationship");

#checking on the relationship between family relationship and weekend drinking
ax = sns.countplot(x="walc", hue="fam_rel", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Alcohol consumption rate")
plt.ylabel("Students")
plt.title("Weekend Alcohol consumption in relation to family relationship");

"""###*AVAILABLE FREE TIME vs ALCOHOL CONSUMPTION*"""

#How does the free time available to the student affect alcohol consumption 
#Checking the relative available free time for the student
#
sns.set_theme(style="darkgrid")
ax = sns.countplot(x="free_time", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Chances of having free time")
plt.ylabel("Students")
plt.title("Overview of student free time")

#checking on the relationship between free time and weekday drinking
ax = sns.countplot(x="dalc", hue="free_time", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Alcohol consumption rate")
plt.ylabel("Students")
plt.title("Alcohol consumption in relation to free time");

#checking on the relationship between free time and weekend drinking
ax = sns.countplot(x="walc", hue="free_time", data=cr7)
ax.set_xlabel("")
ax.set_xticklabels(['Very Low', 'Low', 'Medium', 'High', 'Very High'])
plt.xlabel("Alcohol consumption")
plt.ylabel("Students")
plt.title("Weekend Alcohol consumption in relation to free time");

"""###*HIGHEST AND LOWEST PERFORMING STUDENTS*"""

# Sort the data to find the best performing students and accompanying factors 
# parental status, family size, guardian, reason for going to school of 10 students with the highest grades
y = cr7.sort_values(by= "grade", ascending= 0)
y[["p_status", "fam_size", "reason", "guardian", "grade"]].head(10)

# Sort the data to find the best performing students and accompanying factors 
# parental status, family size, guardian, reason for going to school of 10 students with the lowest grades
v = cr7.sort_values(by= "grade", ascending= 1)
v[["p_status", "fam_size", "reason", "guardian", "grade"]].head(10)